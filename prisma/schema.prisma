generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
  id            String    @id 
  email         String    @unique
  password      String
  profile_image String?
  name          String?
  role          UserRole  @default(customer)
  isVerified    Boolean?  @default(false)
  uploads       Upload[]  @relation("UserUploads")
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Upload {
  id            String        @id @default(uuid())
  filename      String
  fileData      String
  status        UploadStatus  @default(pending)
  customer      User          @relation("UserUploads", fields: [customerId], references: [id])
  customerId    String
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  notifications Notification[]
}

model Notification {
  id        String    @id @default(uuid())
  upload    Upload    @relation(fields: [uploadId], references: [id])
  uploadId  String
  sentAt    DateTime  @default(now())
  message   String
}

enum UserRole {
  customer
  admin
}

enum UploadStatus {
  pending // Default status for new document uploads (customer-side)
  printing // Set by admin when the document is being printed
  cancelled // Customer can cancel the upload at any time
  ready_to_pickup // Admin can set this when the document is ready for pickup
  completed // Final status when the document has been picked up by the customer
} 